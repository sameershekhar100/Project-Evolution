name: Generated APK AAB (Upload - Create Artifact To Github Action)
env:
  main_project_module: app

on:
  push:
    branches:
       - 'release/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
   build:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checking out branch 
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ secrets.KEYSTORE_BASE_64 }}
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          RELEASE_KEYSTORE_ALIAS: ${{ secrets.RELEASE_KEYSTORE_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }} 

        run: |
          echo $ENCODED_STRING > keystore-b64.txt
          base64 -d keystore-b64.txt > keystore.jks
          chmod +x ./gradlew

      - name: Version Composer
        shell: bash
        run: echo "version_name=$( ./gradlew -q app:printVersionName )" >> $GITHUB_ENV

      # Print the version name
      - name: Show Version Name
        run: echo "The extracted version name is ${{ env.version_name }}."

      - name: Build with Gradle
        env:
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          RELEASE_KEYSTORE_ALIAS: ${{ secrets.RELEASE_KEYSTORE_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
        run: ./gradlew assemblRelease

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: ProjectEvolution-apk
          path: ./app/build/outputs/apk


      - name: Zip artifacts
        run: |
          echo "${{ github.ref_name }}"
          cd ./app/build/outputs
          zip -r project-evolution-sample-app.zip apk

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          body_path: ./ChangeLog.txt

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./app/build/outputs/apk-${{ env.version_name }}
          asset_name: project-evolution-apk-${{ steps.version_composer.outputs.version_name }}.zip
          asset_content_type: application/zip
        
